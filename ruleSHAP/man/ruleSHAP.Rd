% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ModelFits.R
\name{ruleSHAP}
\alias{ruleSHAP}
\title{Fit a RuleSHAP model}
\usage{
ruleSHAP(
  formula,
  data,
  intercept = T,
  family = c("gaussian", "binomial"),
  mu = 0.5,
  eta = 2,
  lin.relax = 1,
  method.tau.lin = "halfCauchy",
  ntree = 500,
  maxdepth = 3,
  disaggregate = T,
  rounding.digits = 2,
  burn.in = 2000,
  nmc = 20000,
  thin = 1,
  ping = 1000,
  verbose = T,
  rules = NULL,
  wins.frac = 0.025
)
}
\arguments{
\item{formula}{an object of class "\link{formula}" which represents the
desired predicted outcome (Left-hand side) and the desired predictors
(Right-hand side). If intercept should not be included, do not actively
remove it from the formula. Instead, use the parameter \code{intercept}}

\item{data}{a data frame containing the data to be used to fit the model}

\item{intercept}{a logical entry determining whether an intercept should be
used (\code{TRUE}) or not used (\code{FALSE}). The former is recommended.}

\item{family}{A character string denoting the type of (Generalized) linear model
that is being fitted.}

\item{mu, eta}{hyparameters defining how strong the prior shrinkage of complex
rules should be. A higher value of \code{mu} induces stronger shrinkage on
rules with extreme support, a higher value of \code{eta} induces a stronger
shrinkage on the rules involving many predictors.}

\item{lin.relax}{the level of shrinkage of linear terms and intercept.
This is equal to the hyperparameter \eqn{A^{(l)}}.}

\item{method.tau.lin}{the type of prior distribution for the global shrinkage
\eqn{\tau_0} which is shared by the coefficients of the linear terms. Set to
\code{"halfCauchy"} by default, but may be set to \code{"fixed"} to have it
fixed to a value equal to \eqn{A^{(l)}} (see parameter \code{lin.relax}).}

\item{ntree}{number of trees that should be used when generating the rules}

\item{maxdepth}{maximum depth of the trees used to generate the rules. In particular,
this induces a maximum on the order of interactions between predictors.}

\item{disaggregate}{a logical value determining whether rules should be extracted
by also considering all possible subrules (\code{TRUE}) or if rules should only
be extracted in a top-down manner as in RuleFit and HorseRule (\code{FALSE}).}

\item{rounding.digits}{Number of decimals that the splitting points
are rounded to in the rule generation. This rounding simplifies readability
of rules and prevents rules from being very similar but not identical.}

\item{burn.in}{Number of burn-in MCMC iterations that are discarded before
the draws start to be recorded.}

\item{nmc}{Number of MCMC iterations after the initial burn-in period}

\item{thin}{Thinning parameter: if saving all MCMC draws is computationally
infeasible, thinning makes the model only record every \code{thin}-th iteration.}

\item{ping}{If the model is selected to be verbose, this denotes every how many
MCMC draws an update message should be printed}

\item{verbose}{logical value denoting whether the model should send printed
updates on how far the fitting procedure is}

\item{rules}{Either \code{NULL} or a character vector containing the rules that
should be used to fit the RuleSHAP model, if one wants to specify them in advance.
If left to its default \code{NULL}, rules will be generated using a
Parametric Random Forest.}

\item{wins.frac}{A numeric entry representing the fraction by which the dataset
is winsorized. It also applies to rules by inducing a minimum node size.}
}
\value{
rules a character vector containing the rules that were generated and used
for the model fitting

BetaSamples A matrix where every column is a MCMC sample of the coefficients.
The first row represents the intercept. The following \eqn{p} represent
the linear terms. The remaining rows are for the rules, in the same order as in
output \code{rules}

BetaHat A vector containing the posterior mean of the coefficients.
The first entry represents the intercept. The following \eqn{p} represent
the linear terms. The remaining entries are for the rules, in the same order as in
output \code{rules}
}
\description{
This function fits a RuleSHAP model for continuous and binary data.
It is based upon fitting the following tweaked horseshoe prior:
\deqn{y|X,a,b,\sigma^2 \sim \mathcal{N}(\beta_0+\sum_{j=1}^pb_jx_j+\sum_{k=1}^qa_kr_k,\sigma^2I),}
\deqn{b_j|\lambda^{(l)}_j,\tau,\sigma^2 \sim \mathcal{N}\Big(0,\big(\lambda^{(l)}_j\tau\tau_0\sigma\big)^2\Big),}
\deqn{a_k|\lambda^{(r)}_k,\tau,\sigma^2 \sim \mathcal{N}\Big(0,\big(\lambda^{(r)}_k\tau\tau_1\sigma\big)^2),}
\deqn{\lambda^{(l)}_j \sim \mathcal{C}^+(0,A^{(l)}),}
\deqn{\lambda^{(r)}_j \sim \mathcal{C}^+(0,A^{(r)}_j),}
\deqn{A^{(r)}_j=\frac{\big(2\cdot \min(1-\overline{r}_j,\overline{r}_j)\big)^\mu}{(m_j)^\eta},}
\deqn{\tau_0,\tau_1,\tau \sim \mathcal{C}^+(0,1),}
\deqn{\sigma^2 \sim \sigma^{-2}d\sigma^2,}
where \eqn{m_j} is the number of predictors involved in the rule \eqn{r_j}.
}
